namespace Uhppoted.Tests

open System
open System.Net
open NUnit.Framework
open uhppoted

[<TestFixture>]
type TestDecoder() =
    [<Test>]
    member this.TestDecodeGetControllerResponse() =
        let packet : byte array = [| 
             0x17uy; 0x94uy; 0x00uy; 0x00uy; 0x78uy; 0x37uy; 0x2auy; 0x18uy;
             0xc0uy; 0xa8uy; 0x01uy; 0x64uy; 0xffuy; 0xffuy; 0xffuy; 0x00uy;
             0xc0uy; 0xa8uy; 0x01uy; 0x01uy; 0x00uy; 0x66uy; 0x19uy; 0x39uy;
             0x55uy; 0x2duy; 0x08uy; 0x92uy; 0x20uy; 0x18uy; 0x08uy; 0x16uy;
             0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
             0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
             0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
             0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy
        |]

        let expected = { 
           controller = 405419896u
           address = IPAddress([| 0xc0uy; 0xa8uy; 0x01uy; 0x64uy; |])
           netmask = IPAddress([| 0xffuy; 0xffuy; 0xffuy; 0x00uy; |])
           gateway = IPAddress([| 0xc0uy; 0xa8uy; 0x01uy; 0x01uy; |])
           MAC = [| 0x00uy; 0x66uy; 0x19uy; 0x39uy; 0x55uy; 0x2duy |]
           version = "v8.92"
           date = Some(DateOnly(2018,8,16))
        }

        let response = Decode.get_controller_response packet
        Assert.That(response, Is.EqualTo(expected))

